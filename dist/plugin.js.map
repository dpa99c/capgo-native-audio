{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/audio-asset.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst NativeAudio = registerPlugin('NativeAudio', {\n    web: () => import('./web').then((m) => new m.NativeAudioWeb()),\n});\nexport * from './definitions';\nexport { NativeAudio };\n//# sourceMappingURL=index.js.map","export class AudioAsset {\n    constructor(audio) {\n        this.audio = audio;\n    }\n}\n//# sourceMappingURL=audio-asset.js.map","import { WebPlugin } from '@capacitor/core';\nimport { AudioAsset } from './audio-asset';\nexport class NativeAudioWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.debugMode = false;\n        this.currentTimeIntervals = new Map();\n        this.zeroVolume = 0.0001; // Avoids the gain node being set to 0 for exponential ramping\n    }\n    async resume(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        const data = this.getAudioAssetData(options.assetId);\n        const targetVolume = data.volumeBeforePause || data.volume || 1;\n        if (options === null || options === void 0 ? void 0 : options.fadeIn) {\n            const fadeDuration = options.fadeInDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.doFadeIn(audio, fadeDuration, targetVolume);\n        }\n        else if (audio.volume <= this.zeroVolume) {\n            audio.volume = targetVolume;\n        }\n        this.doResume(options.assetId);\n    }\n    async doResume(assetId) {\n        const audio = this.getAudioAsset(assetId).audio;\n        this.startCurrentTimeUpdates(assetId);\n        if (audio.paused) {\n            return audio.play();\n        }\n    }\n    async pause(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        const data = this.getAudioAssetData(options.assetId);\n        data.volumeBeforePause = audio.volume;\n        this.setAudioAssetData(options.assetId, data);\n        if (options === null || options === void 0 ? void 0 : options.fadeOut) {\n            this.cancelGainNodeRamp(audio);\n            const fadeOutDuration = options.fadeOutDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.doFadeOut(audio, fadeOutDuration);\n            data.fadeOutToStopTimer = setTimeout(() => {\n                this.doPause(options.assetId);\n            }, fadeOutDuration * 1000);\n            this.setAudioAssetData(options.assetId, data);\n        }\n        else {\n            this.doPause(options.assetId);\n        }\n    }\n    async doPause(assetId) {\n        const audio = this.getAudioAsset(assetId).audio;\n        this.clearFadeOutToStopTimer(assetId);\n        this.stopCurrentTimeUpdates(assetId);\n        return audio.pause();\n    }\n    async setCurrentTime(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        audio.currentTime = options.time;\n        return;\n    }\n    async getCurrentTime(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        return { currentTime: audio.currentTime };\n    }\n    async getDuration(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        if (Number.isNaN(audio.duration)) {\n            throw 'no duration available';\n        }\n        if (!Number.isFinite(audio.duration)) {\n            throw 'duration not available => media resource is streaming';\n        }\n        return { duration: audio.duration };\n    }\n    async setDebugMode(options) {\n        this.debugMode = options.enabled;\n        if (this.debugMode) {\n            this.logInfo('Debug mode enabled');\n        }\n    }\n    async configure(options) {\n        throw `configure is not supported for web: ${JSON.stringify(options)}`;\n    }\n    async isPreloaded(options) {\n        try {\n            return { found: !!this.getAudioAsset(options.assetId) };\n        }\n        catch (e) {\n            return { found: false };\n        }\n    }\n    async preload(options) {\n        var _a;\n        this.logInfo(`Preloading audio asset with options: ${JSON.stringify(options)}`);\n        if (NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(options.assetId)) {\n            throw 'AssetId already exists. Unload first if like to change!';\n        }\n        if (!((_a = options.assetPath) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw 'no assetPath provided';\n        }\n        NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.set(options.assetId, options);\n        await new Promise((resolve, reject) => {\n            if (!options.isUrl && !new RegExp('^/?' + NativeAudioWeb.FILE_LOCATION).test(options.assetPath)) {\n                const slashPrefix = options.assetPath.startsWith('/') ? '' : '/';\n                options.assetPath = `${NativeAudioWeb.FILE_LOCATION}${slashPrefix}${options.assetPath}`;\n            }\n            const audio = document.createElement('audio');\n            audio.crossOrigin = 'anonymous';\n            audio.src = options.assetPath;\n            audio.autoplay = false;\n            audio.loop = false;\n            audio.preload = 'metadata';\n            audio.addEventListener('loadedmetadata', () => {\n                resolve();\n            });\n            audio.addEventListener('error', (errEvt) => {\n                this.logError(`Error loading audio file: ${options.assetPath}, error: ${errEvt}`);\n                reject('Error loading audio file');\n            });\n            const data = this.getAudioAssetData(options.assetId);\n            if (options.volume) {\n                audio.volume = options.volume;\n                data.volume = options.volume;\n            }\n            else {\n                data.volume = audio.volume;\n            }\n            NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.set(options.assetId, new AudioAsset(audio));\n            this.setAudioAssetData(options.assetId, data);\n        });\n    }\n    onEnded(assetId) {\n        this.logDebug(`Playback ended for assetId: ${assetId}`);\n        this.notifyListeners('complete', { assetId });\n    }\n    async play(options) {\n        this.logInfo(`Playing audio asset with options: ${JSON.stringify(options)}`);\n        this.clearFadeOutToStopTimer(options.assetId);\n        const { delay = 0 } = options;\n        if (delay > 0) {\n            const data = this.getAudioAssetData(options.assetId);\n            data.startTimer = setTimeout(() => {\n                this.doPlay(options);\n                data.startTimer = 0;\n                this.setAudioAssetData(options.assetId, data);\n            }, delay * 1000);\n            this.setAudioAssetData(options.assetId, data);\n        }\n        else {\n            await this.doPlay(options);\n        }\n    }\n    async doPlay(options) {\n        const { assetId, time = 0 } = options;\n        if (!NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.has(assetId)) {\n            throw `no asset for assetId \"${assetId}\" available. Call preload first!`;\n        }\n        const preloadOptions = NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.get(assetId);\n        // unload asset to create a new HTMLAudioElement because reusing the same element causes issues with the audio context\n        await this.unload(options);\n        // preload the asset again to create a new HTMLAudioElement\n        await this.preload(preloadOptions);\n        const audio = this.getAudioAsset(assetId).audio;\n        audio.loop = false;\n        audio.currentTime = time;\n        audio.addEventListener('ended', () => this.onEnded(assetId), {\n            once: true,\n        });\n        const data = this.getAudioAssetData(assetId);\n        if (options.volume) {\n            audio.volume = options.volume;\n            data.volume = options.volume;\n            this.setGainNodeVolume(audio, options.volume);\n        }\n        else if (!data.volume) {\n            data.volume = audio.volume;\n        }\n        audio.play();\n        this.startCurrentTimeUpdates(assetId);\n        if (options.fadeIn) {\n            this.logDebug(`Fading in audio asset with assetId: ${assetId}`);\n            const fadeDuration = options.fadeInDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.doFadeIn(audio, fadeDuration);\n        }\n        if (options.fadeOut && !Number.isNaN(audio.duration) && Number.isFinite(audio.duration)) {\n            this.logDebug(`Fading out audio asset with assetId: ${assetId}`);\n            const fadeOutDuration = options.fadeOutDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            const fadeOutStartTime = options.fadeOutStartTime || audio.duration - fadeOutDuration;\n            data.fadeOut = true;\n            data.fadeOutStartTime = fadeOutStartTime;\n            data.fadeOutDuration = fadeOutDuration;\n        }\n        this.setAudioAssetData(assetId, data);\n    }\n    doFadeIn(audio, fadeDuration, targetVolume) {\n        const data = this.getAudioAssetData(audio.id);\n        this.setGainNodeVolume(audio, 0);\n        const fadeToVolume = targetVolume !== null && targetVolume !== void 0 ? targetVolume : 1;\n        this.linearRampGainNodeVolume(audio, fadeToVolume, fadeDuration);\n        data.fadeInTimer = setTimeout(() => {\n            data.fadeInTimer = 0;\n            this.setAudioAssetData(audio.id, data);\n        }, fadeDuration * 1000);\n        this.setAudioAssetData(audio.id, data);\n    }\n    doFadeOut(audio, fadeDuration) {\n        this.linearRampGainNodeVolume(audio, 0, fadeDuration);\n    }\n    async loop(options) {\n        this.logInfo(`Looping audio asset with options: ${JSON.stringify(options)}`);\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.reset(audio);\n        audio.loop = true;\n        this.startCurrentTimeUpdates(options.assetId);\n        return audio.play();\n    }\n    async stop(options) {\n        this.logInfo(`Stopping audio asset with options: ${JSON.stringify(options)}`);\n        const audio = this.getAudioAsset(options.assetId).audio;\n        const data = this.getAudioAssetData(options.assetId);\n        this.clearFadeOutToStopTimer(options.assetId);\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        if (!audio.paused && options.fadeOut) {\n            const fadeDuration = options.fadeOutDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.doFadeOut(audio, fadeDuration);\n            data.fadeOutToStopTimer = setTimeout(() => {\n                this.doStop(audio, options);\n            }, fadeDuration * 1000);\n            this.setAudioAssetData(options.assetId, data);\n        }\n        else {\n            this.doStop(audio, options);\n        }\n    }\n    doStop(audio, options) {\n        audio.pause();\n        this.onEnded(options.assetId);\n        this.reset(audio);\n    }\n    reset(audio) {\n        var _a;\n        audio.currentTime = 0;\n        for (const [assetId, asset] of NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.entries()) {\n            if (asset.audio === audio) {\n                this.stopCurrentTimeUpdates(assetId);\n                this.clearFadeOutToStopTimer(assetId);\n                this.clearStartTimer(assetId);\n                this.cancelGainNodeRamp(audio);\n                const data = this.getAudioAssetData(assetId);\n                const initialVolume = (_a = data.volume) !== null && _a !== void 0 ? _a : 1;\n                this.setGainNodeVolume(audio, initialVolume);\n                this.setAudioAssetData(assetId, data);\n                break;\n            }\n        }\n    }\n    clearFadeOutToStopTimer(assetId) {\n        const data = this.getAudioAssetData(assetId);\n        if (data === null || data === void 0 ? void 0 : data.fadeOutToStopTimer) {\n            clearTimeout(data.fadeOutToStopTimer);\n            data.fadeOutToStopTimer = 0;\n            this.setAudioAssetData(assetId, data);\n        }\n    }\n    clearStartTimer(assetId) {\n        const data = this.getAudioAssetData(assetId);\n        if (data.startTimer) {\n            clearTimeout(data.startTimer);\n            data.startTimer = 0;\n            this.setAudioAssetData(assetId, data);\n        }\n    }\n    async unload(options) {\n        this.logInfo(`Unloading audio asset with options: ${JSON.stringify(options)}`);\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.reset(audio);\n        NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.delete(options.assetId);\n        NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.delete(options.assetId);\n        NativeAudioWeb.AUDIO_DATA_MAP.delete(options.assetId);\n        this.cleanupAudioContext(audio);\n    }\n    cleanupAudioContext(audio) {\n        const gainNode = NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        if (gainNode) {\n            gainNode.disconnect();\n            NativeAudioWeb.GAIN_NODE_MAP.delete(audio);\n        }\n        const audioContext = NativeAudioWeb.AUDIO_CONTEXT_MAP.get(audio);\n        if (audioContext) {\n            audioContext.close();\n            NativeAudioWeb.AUDIO_CONTEXT_MAP.delete(audio);\n        }\n        const sourceNode = NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.get(audio);\n        if (sourceNode) {\n            sourceNode.disconnect();\n            NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.delete(audio);\n        }\n    }\n    async setVolume(options) {\n        this.logInfo(`Setting volume for audio asset with options: ${JSON.stringify(options)}`);\n        if (typeof (options === null || options === void 0 ? void 0 : options.volume) !== 'number') {\n            throw 'no volume provided';\n        }\n        const { volume, duration = 0 } = options;\n        const data = this.getAudioAssetData(options.assetId);\n        data.volume = volume;\n        this.setAudioAssetData(options.assetId, data);\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        if (duration > 0) {\n            this.exponentialRampGainNodeVolume(audio, volume, duration);\n        }\n        else {\n            audio.volume = volume;\n        }\n    }\n    async setRate(options) {\n        this.logInfo(`Setting playback rate for audio asset with options: ${JSON.stringify(options)}`);\n        if (typeof (options === null || options === void 0 ? void 0 : options.rate) !== 'number') {\n            throw 'no rate provided';\n        }\n        const audio = this.getAudioAsset(options.assetId).audio;\n        audio.playbackRate = options.rate;\n    }\n    async isPlaying(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        return { isPlaying: !audio.paused };\n    }\n    async clearCache() {\n        this.logWarning('clearCache is not supported for web. No cache to clear.');\n        return;\n    }\n    getAudioAsset(assetId) {\n        this.checkAssetId(assetId);\n        if (!NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(assetId)) {\n            throw `no asset for assetId \"${assetId}\" available. Call preload first!`;\n        }\n        return NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.get(assetId);\n    }\n    checkAssetId(assetId) {\n        if (typeof assetId !== 'string') {\n            throw 'assetId must be a string';\n        }\n        if (!(assetId === null || assetId === void 0 ? void 0 : assetId.length)) {\n            throw 'no assetId provided';\n        }\n    }\n    getOrCreateAudioContext(audio) {\n        if (NativeAudioWeb.AUDIO_CONTEXT_MAP.has(audio)) {\n            return NativeAudioWeb.AUDIO_CONTEXT_MAP.get(audio);\n        }\n        const audioContext = new AudioContext();\n        NativeAudioWeb.AUDIO_CONTEXT_MAP.set(audio, audioContext);\n        return audioContext;\n    }\n    getOrCreateMediaElementSource(audioContext, audio) {\n        if (NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.has(audio)) {\n            return NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.get(audio);\n        }\n        const sourceNode = audioContext.createMediaElementSource(audio);\n        NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.set(audio, sourceNode);\n        return sourceNode;\n    }\n    getOrCreateGainNode(audio, track) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        if (NativeAudioWeb.GAIN_NODE_MAP.has(audio)) {\n            return NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        }\n        const gainNode = audioContext.createGain();\n        track.connect(gainNode).connect(audioContext.destination);\n        NativeAudioWeb.GAIN_NODE_MAP.set(audio, gainNode);\n        return gainNode;\n    }\n    setGainNodeVolume(audio, volume, time) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        if (time) {\n            gainNode.gain.setValueAtTime(volume, time);\n        }\n        else {\n            gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n        }\n    }\n    exponentialRampGainNodeVolume(audio, volume, duration) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        let adjustedVolume = volume;\n        if (volume < this.zeroVolume) {\n            adjustedVolume = this.zeroVolume;\n        }\n        // Use exponential ramping for human hearing perception\n        gainNode.gain.exponentialRampToValueAtTime(adjustedVolume, audioContext.currentTime + duration);\n    }\n    linearRampGainNodeVolume(audio, volume, duration) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        gainNode.gain.linearRampToValueAtTime(volume, audioContext.currentTime + duration);\n    }\n    cancelGainNodeRamp(audio) {\n        const gainNode = NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        if (gainNode) {\n            gainNode.gain.cancelScheduledValues(0);\n        }\n    }\n    startCurrentTimeUpdates(assetId) {\n        this.stopCurrentTimeUpdates(assetId);\n        const audio = this.getAudioAsset(assetId).audio;\n        const intervalId = window.setInterval(() => {\n            if (!audio.paused) {\n                const currentTime = Math.round(audio.currentTime * 10) / 10; // Round to nearest 100ms\n                this.notifyListeners('currentTime', { assetId, currentTime });\n                this.logDebug(`Current time update for assetId: ${assetId}, currentTime: ${currentTime}`);\n                const data = this.getAudioAssetData(assetId);\n                if (data.fadeOut && audio.currentTime >= data.fadeOutStartTime) {\n                    this.cancelGainNodeRamp(audio);\n                    this.setAudioAssetData(assetId, data);\n                    this.doFadeOut(audio, data.fadeOutDuration);\n                }\n            }\n            else {\n                this.stopCurrentTimeUpdates(assetId);\n            }\n        }, NativeAudioWeb.CURRENT_TIME_UPDATE_INTERVAL);\n        this.currentTimeIntervals.set(assetId, intervalId);\n    }\n    stopCurrentTimeUpdates(assetId) {\n        if (assetId) {\n            const intervalId = this.currentTimeIntervals.get(assetId);\n            if (intervalId) {\n                clearInterval(intervalId);\n                this.currentTimeIntervals.delete(assetId);\n            }\n        }\n        else {\n            for (const intervalId of this.currentTimeIntervals.values()) {\n                clearInterval(intervalId);\n            }\n            this.currentTimeIntervals.clear();\n        }\n    }\n    getAudioAssetData(assetId) {\n        return NativeAudioWeb.AUDIO_DATA_MAP.get(assetId) || {};\n    }\n    setAudioAssetData(assetId, data) {\n        const currentData = NativeAudioWeb.AUDIO_DATA_MAP.get(assetId) || {};\n        const newData = Object.assign(Object.assign({}, currentData), data);\n        NativeAudioWeb.AUDIO_DATA_MAP.set(assetId, newData);\n    }\n    logError(message) {\n        if (!this.debugMode)\n            return;\n        console.error(`${NativeAudioWeb.LOG_TAG} Error: ${message}`);\n    }\n    logWarning(message) {\n        if (!this.debugMode)\n            return;\n        console.warn(`${NativeAudioWeb.LOG_TAG} Warning: ${message}`);\n    }\n    logInfo(message) {\n        if (!this.debugMode)\n            return;\n        console.info(`${NativeAudioWeb.LOG_TAG} Info: ${message}`);\n    }\n    logDebug(message) {\n        if (!this.debugMode)\n            return;\n        console.debug(`${NativeAudioWeb.LOG_TAG} Debug: ${message}`);\n    }\n}\nNativeAudioWeb.LOG_TAG = '[NativeAudioWeb]';\nNativeAudioWeb.FILE_LOCATION = '';\nNativeAudioWeb.DEFAULT_FADE_DURATION_SEC = 1;\nNativeAudioWeb.CURRENT_TIME_UPDATE_INTERVAL = 100;\nNativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP = new Map();\nNativeAudioWeb.AUDIO_DATA_MAP = new Map();\nNativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID = new Map();\nNativeAudioWeb.AUDIO_CONTEXT_MAP = new Map();\nNativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP = new Map();\nNativeAudioWeb.GAIN_NODE_MAP = new Map();\nconst NativeAudio = new NativeAudioWeb();\nexport { NativeAudio };\n//# sourceMappingURL=web.js.map"],"names":["NativeAudio","registerPlugin","WebPlugin"],"mappings":"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"}