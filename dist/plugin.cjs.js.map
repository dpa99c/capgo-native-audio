{"version":3,"file":"plugin.cjs.js","sources":["esm/index.js","esm/audio-asset.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst NativeAudio = registerPlugin('NativeAudio', {\n    web: () => import('./web').then((m) => new m.NativeAudioWeb()),\n});\nexport * from './definitions';\nexport { NativeAudio };\n//# sourceMappingURL=index.js.map","export class AudioAsset {\n    constructor(audio) {\n        this.audio = audio;\n    }\n}\n//# sourceMappingURL=audio-asset.js.map","import { WebPlugin } from '@capacitor/core';\nimport { AudioAsset } from './audio-asset';\nexport class NativeAudioWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.currentTimeIntervals = new Map();\n        this.fadeOutTimer = 0;\n        this.startTimer = 0;\n        this.zeroVolume = 0.0001; // Avoids the gain node being set to 0 for exponential ramping\n    }\n    async resume(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.startCurrentTimeUpdates(options.assetId);\n        if (audio.paused) {\n            return audio.play();\n        }\n    }\n    async pause(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        this.clearFadeOutTimer();\n        this.stopCurrentTimeUpdates(options.assetId);\n        return audio.pause();\n    }\n    async setCurrentTime(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        audio.currentTime = options.time;\n        return;\n    }\n    async getCurrentTime(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        return { currentTime: audio.currentTime };\n    }\n    async getDuration(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        if (Number.isNaN(audio.duration)) {\n            throw 'no duration available';\n        }\n        if (!Number.isFinite(audio.duration)) {\n            throw 'duration not available => media resource is streaming';\n        }\n        return { duration: audio.duration };\n    }\n    async configure(options) {\n        throw `configure is not supported for web: ${JSON.stringify(options)}`;\n    }\n    async isPreloaded(options) {\n        try {\n            return { found: !!this.getAudioAsset(options.assetId) };\n        }\n        catch (e) {\n            return { found: false };\n        }\n    }\n    async preload(options) {\n        var _a;\n        if (NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(options.assetId)) {\n            throw 'AssetId already exists. Unload first if like to change!';\n        }\n        if (!((_a = options.assetPath) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw 'no assetPath provided';\n        }\n        NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.set(options.assetId, options);\n        await new Promise((resolve, reject) => {\n            if (!options.isUrl && !new RegExp('^/?' + NativeAudioWeb.FILE_LOCATION).test(options.assetPath)) {\n                const slashPrefix = options.assetPath.startsWith('/') ? '' : '/';\n                options.assetPath = `${NativeAudioWeb.FILE_LOCATION}${slashPrefix}${options.assetPath}`;\n            }\n            const audio = document.createElement(\"audio\");\n            audio.crossOrigin = \"anonymous\";\n            audio.src = options.assetPath;\n            audio.autoplay = false;\n            audio.loop = false;\n            audio.preload = 'metadata';\n            audio.addEventListener('loadedmetadata', () => {\n                resolve();\n            });\n            audio.addEventListener('error', () => reject('Error loading audio file'));\n            if (options.volume) {\n                audio.volume = options.volume;\n                NativeAudioWeb.INITIAL_VOLUME_MAP.set(audio, options.volume);\n            }\n            else {\n                NativeAudioWeb.INITIAL_VOLUME_MAP.set(audio, audio.volume);\n            }\n            NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.set(options.assetId, new AudioAsset(audio));\n        });\n    }\n    onEnded(assetId) {\n        this.notifyListeners('complete', { assetId });\n    }\n    async play(options) {\n        this.clearFadeOutTimer();\n        const { delay = 0 } = options;\n        if (delay > 0) {\n            this.startTimer = setTimeout(() => {\n                this.doPlay(options);\n                this.startTimer = 0;\n            }, delay * 1000);\n        }\n        else {\n            await this.doPlay(options);\n        }\n    }\n    async doPlay(options) {\n        var _a;\n        const { assetId, time = 0 } = options;\n        if (!NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.has(assetId)) {\n            throw `no asset for assetId \"${assetId}\" available. Call preload first!`;\n        }\n        const preloadOptions = NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.get(assetId);\n        // unload asset to create a new HTMLAudioElement because reusing the same element causes issues with the audio context\n        await this.unload(options);\n        // preload the asset again to create a new HTMLAudioElement\n        await this.preload(preloadOptions);\n        const audio = this.getAudioAsset(assetId).audio;\n        audio.loop = false;\n        audio.currentTime = time;\n        audio.addEventListener('ended', () => this.onEnded(assetId), {\n            once: true,\n        });\n        if (options.volume) {\n            audio.volume = options.volume;\n            NativeAudioWeb.INITIAL_VOLUME_MAP.set(audio, options.volume);\n            this.setGainNodeVolume(audio, options.volume);\n        }\n        else if (!NativeAudioWeb.INITIAL_VOLUME_MAP.has(audio)) {\n            NativeAudioWeb.INITIAL_VOLUME_MAP.set(audio, audio.volume);\n        }\n        audio.play();\n        this.startCurrentTimeUpdates(assetId);\n        if (options.fadeIn) {\n            const fadeDuration = options.fadeInDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.setGainNodeVolume(audio, 0);\n            const initialVolume = (_a = NativeAudioWeb.INITIAL_VOLUME_MAP.get(audio)) !== null && _a !== void 0 ? _a : 1;\n            this.linearRampGainNodeVolume(audio, initialVolume, fadeDuration);\n        }\n        if (options.fadeOut && !Number.isNaN(audio.duration) && Number.isFinite(audio.duration)) {\n            const fadeDuration = options.fadeOutDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            const fadeOutStartTime = options.fadeOutStartTime || audio.duration - fadeDuration;\n            this.fadeOutTimer = setTimeout(() => {\n                this.setGainNodeVolume(audio, audio.volume);\n                this.linearRampGainNodeVolume(audio, 0, fadeDuration);\n                this.fadeOutTimer = 0;\n            }, fadeOutStartTime * 1000);\n        }\n    }\n    async loop(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.reset(audio);\n        audio.loop = true;\n        this.startCurrentTimeUpdates(options.assetId);\n        return audio.play();\n    }\n    async stop(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.clearFadeOutTimer();\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        if (!audio.paused && options.fadeOut) {\n            const fadeDuration = options.fadeOutDuration || NativeAudioWeb.DEFAULT_FADE_DURATION_SEC;\n            this.linearRampGainNodeVolume(audio, 0, fadeDuration);\n            this.fadeOutTimer = setTimeout(() => {\n                this.doStop(audio, options);\n            }, fadeDuration * 1000);\n        }\n        else {\n            this.doStop(audio, options);\n        }\n    }\n    doStop(audio, options) {\n        audio.pause();\n        this.onEnded(options.assetId);\n        this.reset(audio);\n    }\n    reset(audio) {\n        var _a;\n        audio.currentTime = 0;\n        for (const [assetId, asset] of NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.entries()) {\n            if (asset.audio === audio) {\n                this.stopCurrentTimeUpdates(assetId);\n                break;\n            }\n        }\n        this.clearFadeOutTimer();\n        this.clearStartTimer();\n        this.cancelGainNodeRamp(audio);\n        const initialVolume = (_a = NativeAudioWeb.INITIAL_VOLUME_MAP.get(audio)) !== null && _a !== void 0 ? _a : 1;\n        this.setGainNodeVolume(audio, initialVolume);\n    }\n    clearFadeOutTimer() {\n        if (this.fadeOutTimer) {\n            clearTimeout(this.fadeOutTimer);\n            this.fadeOutTimer = 0;\n        }\n    }\n    clearStartTimer() {\n        if (this.startTimer) {\n            clearTimeout(this.startTimer);\n            this.startTimer = 0;\n        }\n    }\n    async unload(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.reset(audio);\n        NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.delete(options.assetId);\n        NativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP.delete(options.assetId);\n        this.cleanupAudioContext(audio);\n        NativeAudioWeb.INITIAL_VOLUME_MAP.delete(audio);\n    }\n    cleanupAudioContext(audio) {\n        const gainNode = NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        if (gainNode) {\n            gainNode.disconnect();\n            NativeAudioWeb.GAIN_NODE_MAP.delete(audio);\n        }\n        const audioContext = NativeAudioWeb.AUDIO_CONTEXT_MAP.get(audio);\n        if (audioContext) {\n            audioContext.close();\n            NativeAudioWeb.AUDIO_CONTEXT_MAP.delete(audio);\n        }\n        const sourceNode = NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.get(audio);\n        if (sourceNode) {\n            sourceNode.disconnect();\n            NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.delete(audio);\n        }\n    }\n    async setVolume(options) {\n        if (typeof (options === null || options === void 0 ? void 0 : options.volume) !== 'number') {\n            throw 'no volume provided';\n        }\n        const { volume, duration = 0 } = options;\n        const audio = this.getAudioAsset(options.assetId).audio;\n        this.cancelGainNodeRamp(audio); // cancel any existing scheduled volume changes\n        if (duration > 0) {\n            this.exponentialRampGainNodeVolume(audio, volume, duration);\n        }\n        else {\n            audio.volume = volume;\n        }\n    }\n    async setRate(options) {\n        if (typeof (options === null || options === void 0 ? void 0 : options.rate) !== 'number') {\n            throw 'no rate provided';\n        }\n        const audio = this.getAudioAsset(options.assetId).audio;\n        audio.playbackRate = options.rate;\n    }\n    async isPlaying(options) {\n        const audio = this.getAudioAsset(options.assetId).audio;\n        return { isPlaying: !audio.paused };\n    }\n    async clearCache() {\n        // Web audio doesn't have a persistent cache to clear\n        return;\n    }\n    getAudioAsset(assetId) {\n        this.checkAssetId(assetId);\n        if (!NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(assetId)) {\n            throw `no asset for assetId \"${assetId}\" available. Call preload first!`;\n        }\n        return NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.get(assetId);\n    }\n    checkAssetId(assetId) {\n        if (typeof assetId !== 'string') {\n            throw 'assetId must be a string';\n        }\n        if (!(assetId === null || assetId === void 0 ? void 0 : assetId.length)) {\n            throw 'no assetId provided';\n        }\n    }\n    getOrCreateAudioContext(audio) {\n        if (NativeAudioWeb.AUDIO_CONTEXT_MAP.has(audio)) {\n            return NativeAudioWeb.AUDIO_CONTEXT_MAP.get(audio);\n        }\n        const audioContext = new AudioContext();\n        NativeAudioWeb.AUDIO_CONTEXT_MAP.set(audio, audioContext);\n        return audioContext;\n    }\n    getOrCreateMediaElementSource(audioContext, audio) {\n        if (NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.has(audio)) {\n            return NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.get(audio);\n        }\n        const sourceNode = audioContext.createMediaElementSource(audio);\n        NativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP.set(audio, sourceNode);\n        return sourceNode;\n    }\n    getOrCreateGainNode(audio, track) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        if (NativeAudioWeb.GAIN_NODE_MAP.has(audio)) {\n            return NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        }\n        const gainNode = audioContext.createGain();\n        track.connect(gainNode).connect(audioContext.destination);\n        NativeAudioWeb.GAIN_NODE_MAP.set(audio, gainNode);\n        return gainNode;\n    }\n    setGainNodeVolume(audio, volume, time) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        if (time) {\n            gainNode.gain.setValueAtTime(volume, time);\n        }\n        else {\n            gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n        }\n    }\n    exponentialRampGainNodeVolume(audio, volume, duration) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        let adjustedVolume = volume;\n        if (volume < this.zeroVolume) {\n            adjustedVolume = this.zeroVolume;\n        }\n        // Use exponential ramping for human hearing perception\n        gainNode.gain.exponentialRampToValueAtTime(adjustedVolume, audioContext.currentTime + duration);\n    }\n    linearRampGainNodeVolume(audio, volume, duration) {\n        const audioContext = this.getOrCreateAudioContext(audio);\n        const track = this.getOrCreateMediaElementSource(audioContext, audio);\n        const gainNode = this.getOrCreateGainNode(audio, track);\n        gainNode.gain.linearRampToValueAtTime(volume, audioContext.currentTime + duration);\n    }\n    cancelGainNodeRamp(audio) {\n        const gainNode = NativeAudioWeb.GAIN_NODE_MAP.get(audio);\n        if (gainNode) {\n            gainNode.gain.cancelScheduledValues(0);\n        }\n    }\n    startCurrentTimeUpdates(assetId) {\n        this.stopCurrentTimeUpdates(assetId);\n        const audio = this.getAudioAsset(assetId).audio;\n        const intervalId = window.setInterval(() => {\n            if (!audio.paused) {\n                const currentTime = Math.round(audio.currentTime * 10) / 10; // Round to nearest 100ms\n                this.notifyListeners('currentTime', { assetId, currentTime });\n            }\n            else {\n                this.stopCurrentTimeUpdates(assetId);\n            }\n        }, NativeAudioWeb.CURRENT_TIME_UPDATE_INTERVAL);\n        this.currentTimeIntervals.set(assetId, intervalId);\n    }\n    stopCurrentTimeUpdates(assetId) {\n        if (assetId) {\n            const intervalId = this.currentTimeIntervals.get(assetId);\n            if (intervalId) {\n                clearInterval(intervalId);\n                this.currentTimeIntervals.delete(assetId);\n            }\n        }\n        else {\n            for (const intervalId of this.currentTimeIntervals.values()) {\n                clearInterval(intervalId);\n            }\n            this.currentTimeIntervals.clear();\n        }\n    }\n}\nNativeAudioWeb.FILE_LOCATION = '';\nNativeAudioWeb.DEFAULT_FADE_DURATION_SEC = 1;\nNativeAudioWeb.CURRENT_TIME_UPDATE_INTERVAL = 100;\nNativeAudioWeb.AUDIO_PRELOAD_OPTIONS_MAP = new Map();\nNativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID = new Map();\nNativeAudioWeb.AUDIO_CONTEXT_MAP = new Map();\nNativeAudioWeb.MEDIA_ELEMENT_SOURCE_MAP = new Map();\nNativeAudioWeb.GAIN_NODE_MAP = new Map();\nNativeAudioWeb.INITIAL_VOLUME_MAP = new Map();\nconst NativeAudio = new NativeAudioWeb();\nexport { NativeAudio };\n//# sourceMappingURL=web.js.map"],"names":["NativeAudio","registerPlugin","WebPlugin"],"mappings":"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"}